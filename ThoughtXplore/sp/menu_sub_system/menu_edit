CREATE OR REPLACE FUNCTION txMenu_menu_edit(
mid INTEGER,
mname VARCHAR,
mdesc VARCHAR,
murl VARCHAR,
mpid INTEGER,
micon VARCHAR,
maction VARCHAR,
log_desc VARCHAR,
log_prev VARCHAR,
by_user INTEGER,
ip VARCHAR,
OUT result INTEGER,
OUT rescode INTEGER
) RETURNS RECORD AS $$
DECLARE 
    temp INTEGER;
    menuid INTEGER;
    varrec RECORD;
BEGIN 
temp := 0;
/*
1. check if same menu exists or not
2. check if this user has permission for insertion orn not
3. insert into menu table
4. make a log entry
*/

/*  1. check if user exists or not   */
IF NOT EXISTS ( SELECT id FROM "txMenu_menu" WHERE id=mid ) THEN
	RAISE NOTICE 'INSIDE IF';
	result := -1;
	rescode := 731;
      --  ROLLBACK;
	RETURN;
END IF;

/*  2. check if requesting user has right to register this user at this state  */
SELECT * INTO varrec FROM CheckUserForPermission(by_user,'txMenu','menu',maction);
IF varrec.status <> 500 THEN
	result := -2;
	rescode := varrec.status;
     --   ROLLBACK;
	RETURN;
END IF;

/*  3. INSERT DATA INTO USER TABLE */
UPDATE "txMenu_menu"
SET  "MenuName"=mname,
	 "MenuUrl"=murl,
	 "MenuDesc"=mdesc,
	 "MenuPid"=mpid,
	 "MenuIcon"=micon,
	 "SCI_id"=varrec.varsci
WHERE id=mid;
GET DIAGNOSTICS temp := ROW_COUNT;
IF temp <> 1 THEN 
	result := -1;
	rescode := 733;
        RETURN;
END IF;

/* 4. MAKE A LOG ENTRY */
INSERT INTO "txUser_userlogs"("LogsUser_id","LogsPCI_id","LogsObject","LogsTimeStamp","LogsIP","LogsDescription","LogsPreviousState") 
						VALUES(varrec.userid,varrec.varpci,mid,now(),ip,log_desc,log_prev);
GET DIAGNOSTICS temp := ROW_COUNT;
--RAISE NOTICE 'INSERT USER LOGS, ROW COUNT IS %',temp;
IF temp <> 1 THEN 
	result := -1;
	rescode := 734;
        RETURN;
ELSE
	result := 1;
	rescode := 730;
END IF;
RETURN;
END;
$$ LANGUAGE plpgsql;