/*

Task:

1) Making entries in state content type and permission content type
2) Insert in file_types and folder_types..

*/
CREATE OR REPLACE FUNCTION initilaize_FS() RETURNS VOID AS $$
 
DECLARE
 file_row_index INTEGER;
 folder_row_index INTEGER;
 var_state_active INTEGER;
 id INTEGER;
 var_per_LIST_ONLY INTEGER;
 var_per_LIST_ACCESS INTEGER;
 var_per_CREATE_ACCESS_DELETE INTEGER;
 var_per_READ_ONLY INTEGER;
 var_per_READ_WRITE INTEGER;
 result INTEGER;
BEGIN
  RAISE NOTICE '=== initializing filesystem ===';

/*
 INSERT INTO "txMisc_miscpermission"("PermissionName","PermissionDescription") VALUES('LIST_ONLY','List Files only');
 INSERT INTO "txMisc_miscpermission"("PermissionName","PermissionDescription") VALUES('LIST_ACCESS','List and Access Only');
 INSERT INTO "txMisc_miscpermission"("PermissionName","PermissionDescription") VALUES('CREATE_ACCESS_DELETE','Create, Access & Delete');
 INSERT INTO "txMisc_miscpermission"("PermissionName","PermissionDescription") VALUES('READ_ONLY','Read File only');
 INSERT INTO "txMisc_miscpermission"("PermissionName","PermissionDescription") VALUES('READ_WRITE','Read and Write');
*/
 SELECT INTO var_per_LIST_ONLY id FROM "txMisc_miscpermission" WHERE "PermissionName"='LIST_ONLY';
 IF NOT FOUND THEN
    RAISE EXCEPTION 'id % not found', LIST_ONLY;
 END IF;
 SELECT INTO var_per_LIST_ACCESS id FROM "txMisc_miscpermission" WHERE "PermissionName"='LIST_ACCESS';
 IF NOT FOUND THEN
    RAISE EXCEPTION 'id % not found', LIST_ACCESS;
 END IF;
 SELECT INTO var_per_CREATE_ACCESS_DELETE id FROM "txMisc_miscpermission" WHERE "PermissionName"='CREATE_ACCESS_DELETE';
 IF NOT FOUND THEN
    RAISE EXCEPTION 'id % not found', CREATE_ACCESS_DELETE;
 END IF;
 SELECT INTO var_per_READ_ONLY id FROM "txMisc_miscpermission" WHERE "PermissionName"='READ_ONLY';
 IF NOT FOUND THEN
    RAISE EXCEPTION 'id % not found', READ_ONLY;
 END IF;
 SELECT INTO var_per_READ_WRITE id FROM "txMisc_miscpermission" WHERE "PermissionName"='READ_WRITE';
 IF NOT FOUND THEN
    RAISE EXCEPTION 'id % not found', READ_WRITE;
 END IF;
 
 RAISE NOTICE 'PERMISSION TABLE : LIST_ONLY = %, LIST_ACCESS = %, CREATE_ACCESS_DELETE=%, READ_ONLY = %, READ_WRITE=%',var_per_LIST_ONLY,var_per_LIST_ACCESS,var_per_CREATE_ACCESS_DELETE,var_per_READ_ONLY, var_per_READ_WRITE;
 SELECT COUNT(id) INTO result FROM "txMisc_miscpermission";
 RAISE NOTICE '[USER TRACE] ROW COUNT OF txMisc_miscpermission is % ',result;

 SELECT INTO file_row_index id FROM django_content_type WHERE app_label='txFileSystem' AND model='files_basics';
 IF NOT FOUND THEN
    RAISE EXCEPTION 'id % not found', files_basics;
 END IF;
 
 SELECT INTO folder_row_index id FROM django_content_type WHERE app_label='txFileSystem' AND model='folder_basics';
 IF NOT FOUND THEN
    RAISE EXCEPTION 'id % not found', folder_basics;
 END IF;
 
 SELECT INTO var_state_active id FROM "txMisc_miscstate" WHERE "StateName"='ACTIVE';
 IF NOT FOUND THEN
    RAISE EXCEPTION 'id % not found', ACTIVE;
 END IF;
 
 RAISE NOTICE 'STATE TABLE : active = %',var_state_active;
 
 SELECT INTO result COUNT(id) FROM "txMisc_miscstate";
 IF FOUND THEN
    RAISE NOTICE '[USER TRACE] ROW COUNT OF txMisc_miscstate is % ',result;
 END IF;
 
 
 
 /*Adding to StateContentType*/

 
 INSERT INTO "txMisc_statecontenttype"("State_id","StateContentType_id","StateActive") VALUES(var_state_active,folder_row_index,1);
 INSERT INTO "txMisc_statecontenttype"("State_id","StateContentType_id","StateActive") VALUES(var_state_active,file_row_index,1);
 
 /*
 	Adding Permissions: 
    FOLDER-
 		"List Files only", "List and Access Only", "Create, Access & Delete"
 	FILES=
 		"Read-only", "Read-Write"
  */
 
 INSERT INTO "txMisc_permissioncontenttype"("Permission_id","PermissionContentType_id", "PermissionActive") VALUES(7, 30, 1);
 INSERT INTO "txMisc_permissioncontenttype"("Permission_id","PermissionContentType_id", "PermissionActive") VALUES(8, 30, 1);
 INSERT INTO "txMisc_permissioncontenttype"("Permission_id","PermissionContentType_id", "PermissionActive") VALUES(9, 30, 1);
 INSERT INTO "txMisc_permissioncontenttype"("Permission_id","PermissionContentType_id", "PermissionActive") VALUES(10, 31, 1);
 INSERT INTO "txMisc_permissioncontenttype"("Permission_id","PermissionContentType_id", "PermissionActive") VALUES(11, 31, 1);
    
 /*END ADDING PERMISSIONS */
 
 PERFORM insert_foldertype('Profile_Pics', 'Profile_Pics');
 PERFORM insert_foldertype('Resumes', 'Resumes');
 PERFORM insert_foldertype('Learning_Resources', 'Learning Resources');
 PERFORM insert_filetype('image/jpg', 'JPEG Image');
 PERFORM insert_filetype('image/png', 'PNG Image');
 PERFORM insert_filetype('music/wav', 'WAV Sound File');
 PERFORM insert_filetype('music/mp3', 'MP3 Sound File');
 PERFORM insert_filetype('video/mp4', 'MP4 Video File');
 PERFORM insert_filetype('video/flv', 'FLV Video File');
 PERFORM insert_filetype('doc/pdf', 'PDF Document');
 PERFORM insert_filetype('doc', 'Document');
  
END;
$$ LANGUAGE plpgsql;
