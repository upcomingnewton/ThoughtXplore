CREATE OR REPLACE FUNCTION txEmailTypeInsert(Author text, typeName_ text, url_ text, addninfo_ text,ip TEXT, OUT result_index INTEGER,
OUT result_sci INTEGER ) RETURNS RECORD AS $$

DECLARE 
    temp INTEGER;
    in_userid INTEGER;
    varrec RECORD;
    varrec1 RECORD;
    email TEXT;
	by_user TEXT;
BEGIN 
temp:=0;
/*  1. check if email type exists or not    IF exists rs=602  */
IF EXISTS ( SELECT id FROM "txEmails_emailmessagetypes" WHERE "TypeName"=typeName_) THEN
	result_index := 602;
      --  ROLLBACK;
	RETURN;
END IF;

/*  2. check if requesting user has right to insert this email-type at this state  */

SELECT "UserEmail" into by_user FROM "txUser_user" WHERE id=Author;


SELECT * INTO varrec FROM CheckUserForPermission(Author,'txEmails','emailmessagetypes','txEMAILS_EMAILTYPE_CREATE');
IF varrec.status <> 500 THEN
	result_sci := -600;
	result_index := varrec.status;
     --   ROLLBACK;
	RETURN;
END IF;
/*  3. INSERT DATA INTO EMAIL TEMPLATE table */

	INSERT INTO "txEmails_emailmessagetypes"("TypeName", "url", "addninfo") values (typeName_, url_, addninfo_);
GET DIAGNOSTICS temp := ROW_COUNT;
--RAISE NOTICE 'INSERT USER, ROW COUNT IS %',temp;
IF temp <> 1 THEN 
	result_sci := -600;
	result_index := -601;
      --  ROLLBACK;
        RETURN;
END IF;
SELECT "UserEmail" into email from "txUser_user" WHERE "id"=Author;
SELECT id INTO in_userid FROM "txUser_user" WHERE "UserEmail"=by_user;
--RAISE NOTICE 'INSERT EMAIL TYPE, id IS %',in_userid;



/* 4. MAKE A LOG ENTRY */
INSERT INTO "txEmails_emaillogs"("LogsUser_id","LogsPCI_id","LogsObject","LogsTimeStamp","LogsIP","LogsDescription","LogsPreviousState") 
						VALUES(varrec.userid,varrec.varpci,in_userid,now(),ip,'NULL','NULL');
GET DIAGNOSTICS temp := ROW_COUNT;
--RAISE NOTICE 'INSERT USER LOGS, ROW COUNT IS %',temp;
IF temp <> 1 THEN 
	result_sci := -602;
	result_index := -601;
      --  ROLLBACK;
        RETURN;
ELSE
	result_sci := varrec.varsci;
	result_index := 601;
	--COMMIT;
END IF;
RETURN;
END;
$$ LANGUAGE plpgsql;


