
CREATE OR REPLACE FUNCTION txEmails_db_entry(FromUserID INTEGER, FromUserEmail_ text, EmailTypeID INTEGER, TemplateID INTEGER, Subject_ text, ParameterDict_ text, Timestamp_ text, ToGroupIDs_ text, ToUserIDs_ text, ToUserEmails_ text,ip VARCHAR,
OUT result_index INTEGER,
OUT result_sci INTEGER ) RETURNS RECORD AS $$
DECLARE 
    temp INTEGER;
    in_userid INTEGER;
    varrec RECORD;
    varrec1 RECORD;
    by_user TEXT;
BEGIN 
temp := 0;


/*  1. check if requesting user has right send mail at this state  */

SELECT "UserEmail" into by_user FROM "txUser_user" WHERE id=FromUserID;

SELECT * INTO varrec FROM CheckUserForPermission(by_user,'txEmails','emails','txEMAILS_EMAILS_SEND');
IF varrec.status <> 500 THEN
	result_sci := -600;
	result_index := varrec.status;
     --   ROLLBACK;
	RETURN;
END IF;

/*  2. INSERT DATA INTO EMAIL TABLE */

 INSERT INTO "txEmails_emails"("FromUserID_id", "FromUserEmail","EmailTypeID_id","TemplateID_id","Subject","ParameterDict","DateTimeSent","ToGroupIDs", "ToUserIDs", "ToUserEmails") values (FromUserID, FromUserEmail_,EmailTypeID,TemplateID, Subject_,ParameterDict_,Timestamp_,ToGroupIDs_, ToUserIDs_, ToUserEmails_ ); 

GET DIAGNOSTICS temp := ROW_COUNT;
--RAISE NOTICE 'INSERT USER, ROW COUNT IS %',temp;
IF temp <> 1 THEN 
	result_sci := -600;
	result_index := -601;
      --  ROLLBACK;
        RETURN;
END IF;
SELECT id INTO in_userid FROM "txUser_user" WHERE "UserEmail"=by_user;
--RAISE NOTICE 'INSERT USER, id IS %',in_userid;


/* 3. MAKE A LOG ENTRY */
INSERT INTO "txEmails_emaillogs"("LogsUser_id","LogsPCI_id","LogsObject","LogsTimeStamp","LogsIP","LogsDescription","LogsPreviousState") 
						VALUES(varrec.userid,varrec.varpci,in_userid,now(),ip,'NULL','NULL');
GET DIAGNOSTICS temp := ROW_COUNT;
--RAISE NOTICE 'INSERT USER LOGS, ROW COUNT IS %',temp;
IF temp <> 1 THEN 
	result_sci := -602;
	result_index := -601;
      --  ROLLBACK;
        RETURN;
ELSE
	result_sci := varrec.varsci;
	result_index := 601;
	--COMMIT;
END IF;
RETURN;




END;
$$ LANGUAGE plpgsql;
