CREATE OR REPLACE FUNCTION txUser_user_insert(
email VARCHAR,
pass VARCHAR,
fname VARCHAR,
mname VARCHAR,
lname VARCHAR,
gender VARCHAR,
bday DATE,
userentity VARCHAR,
by_user VARCHAR,
ip VARCHAR,
OUT result_index INTEGER,
OUT result_sci INTEGER
) RETURNS RECORD AS $$
DECLARE 
    temp INTEGER;
    in_userid INTEGER;
    varrec RECORD;
    varrec1 RECORD;
BEGIN 
temp := 0;
/*
1. check if user exists or not 
2. if does not exists , then check for all contraints 
3. insert data
4. check for inserted data
5. insert logs , check for logs and commit
*/

/*  1. check if user exists or not   */
IF EXISTS ( SELECT id FROM "txUser_user" WHERE "UserEmail"=email) THEN
    SELECT "UserSCI_id" INTO result_sci  FROM "txUser_user" WHERE "UserEmail"=email;
	result_index := 602;
      --  ROLLBACK;
	RETURN;
END IF;

/*  2. check if requesting user has right to register this user at this state  */
SELECT * INTO varrec FROM CheckUserForPermission(by_user,'txUser','user','INSERT');
IF varrec.status <> 500 THEN
	result_sci := -600;
	result_index := varrec.status;
     --   ROLLBACK;
	RETURN;
END IF;

/*  3. INSERT DATA INTO USER TABLE */
INSERT INTO "txUser_user"("UserEmail","UserPassword","UserFirstName","UserMiddleName","UserLastName","UserGender","UserBirthDate","UserEntity_id","SCI_id") 
					VALUES(email,pass,fname,mname,lname,gender,bday,(SELECT id FROM "txMisc_entity" WHERE "EntityName"=userentity),varrec.varsci);
GET DIAGNOSTICS temp := ROW_COUNT;
--RAISE NOTICE 'INSERT USER, ROW COUNT IS %',temp;
IF temp <> 1 THEN 
	result_sci := -600;
	result_index := -601;
      --  ROLLBACK;
        RETURN;
END IF;
SELECT id INTO in_userid FROM "txUser_user" WHERE "UserEmail"=email;
--RAISE NOTICE 'INSERT USER, id IS %',in_userid;


/* INSERT INTO USER-GROUP TABLE */
SELECT * INTO varrec1 FROM CheckUserForPermission(by_user,'txUser','usergroup','INSERT');
IF varrec.status <> 500 THEN
	result_sci := -601;
	result_index := varrec.status;
     --   ROLLBACK;
	RETURN;
END IF;
INSERT INTO "txUser_usergroup"("User_id","Group_id","SCI_id") 
			VALUES(in_userid,(SELECT id FROM "txUser_group" where "GroupName"='created_users' ),varrec1.varsci);
--RAISE NOTICE 'INSERT USER, ROW COUNT IS %',temp;
IF temp <> 1 THEN 
	result_sci := -601;
	result_index := -601;
      --  ROLLBACK;
        RETURN;
END IF;

/* 4. MAKE A LOG ENTRY */
INSERT INTO "txUser_userlogs"("LogsUser_id","LogsPCI_id","LogsObject","LogsTimeStamp","LogsIP","LogsDescription","LogsPreviousState") 
						VALUES(varrec.userid,varrec.varpci,in_userid,now(),ip,'NULL','NULL');
GET DIAGNOSTICS temp := ROW_COUNT;
--RAISE NOTICE 'INSERT USER LOGS, ROW COUNT IS %',temp;
IF temp <> 1 THEN 
	result_sci := -602;
	result_index := -601;
      --  ROLLBACK;
        RETURN;
ELSE
	result_sci := varrec.varsci;
	result_index := 601;
	--COMMIT;
END IF;
RETURN;
END;
$$ LANGUAGE plpgsql;